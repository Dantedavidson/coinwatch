[{"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\api.ts":"3","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts":"4","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx":"5"},{"size":208,"mtime":1634942315114,"results":"6","hashOfConfig":"7"},{"size":1080,"mtime":1635029893199,"results":"8","hashOfConfig":"7"},{"size":1168,"mtime":1635029930015,"results":"9","hashOfConfig":"7"},{"size":77,"mtime":1634962919730,"results":"10","hashOfConfig":"7"},{"size":3855,"mtime":1634969483267,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"m1zag1",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx",[],["24","25","26","27","28"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx",["29","30","31","32","33"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\api.ts",["34"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx",["35","36","37","38"],"import React, { useState, useEffect } from 'react';\r\nimport MUITable from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst Table = ({ results }: { results: any[] }) => {\r\n    const assignClass = (value: number) => {\r\n        switch (Math.sign(value)) {\r\n            case 1:\r\n                return 'positive';\r\n\r\n            case -1:\r\n                return 'negative';\r\n            default:\r\n                return 'neutral';\r\n        }\r\n    };\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <MUITable sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Symbol</TableCell>\r\n                        <TableCell align=\"right\">Name</TableCell>\r\n                        <TableCell align=\"right\">Current Price</TableCell>\r\n                        <TableCell align=\"right\">Change</TableCell>\r\n                        <TableCell align=\"right\">% Change</TableCell>\r\n                        <TableCell align=\"right\">Market Cap</TableCell>\r\n                        <TableCell align=\"right\">Total Volume</TableCell>\r\n                        <TableCell align=\"right\">Circulating Supply</TableCell>\r\n                        <TableCell align=\"right\">Updated At</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {results.map((result) => {\r\n                        return (\r\n                            <TableRow\r\n                                key={result.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell>\r\n                                    <img\r\n                                        src={result.image}\r\n                                        alt={`${result.name} logo`}\r\n                                        height={16}\r\n                                        width={16}\r\n                                    />\r\n                                    {result.symbol}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{result.name}</TableCell>\r\n                                <TableCell align=\"right\">{result.current_price}</TableCell>\r\n                                <TableCell\r\n                                    align=\"right\"\r\n                                    className={assignClass(result.price_change_24h)}\r\n                                >\r\n                                    {result.price_change_24h}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align=\"right\"\r\n                                    className={assignClass(result.price_change_percentage_24h)}\r\n                                >\r\n                                    {result.price_change_percentage_24h}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{result.market_cap}</TableCell>\r\n                                <TableCell align=\"right\">{result.total_volume}</TableCell>\r\n                                <TableCell align=\"right\">{result.circulating_supply}</TableCell>\r\n                                <TableCell align=\"right\">{result.last_updated}</TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                </TableBody>\r\n            </MUITable>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":44,"nodeType":"51","messageId":"52","endLine":7,"endColumn":47,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":11,"column":17,"nodeType":"56","messageId":"57","endLine":11,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":19,"column":17,"nodeType":"56","messageId":"57","endLine":19,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":27,"column":9,"nodeType":"56","messageId":"57","endLine":27,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":28,"column":9,"nodeType":"56","messageId":"57","endLine":28,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":23,"column":26,"nodeType":"60","messageId":"61","endLine":23,"endColumn":49},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":10,"column":15,"nodeType":"60","messageId":"61","endLine":10,"endColumn":51},{"ruleId":"49","severity":1,"message":"50","line":10,"column":40,"nodeType":"51","messageId":"52","endLine":10,"endColumn":43,"suggestions":"67"},"lines-around-directive",["68"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["69","70"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["71","72"],"padding-line-between-statements",{"messageId":"73","fix":"74","desc":"75"},{"messageId":"76","fix":"77","desc":"78"},{"messageId":"73","fix":"79","desc":"75"},{"messageId":"76","fix":"80","desc":"78"},"suggestUnknown",{"range":"81","text":"82"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"81","text":"83"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"84","text":"82"},{"range":"84","text":"83"},[294,297],"unknown","never",[439,442]]