[{"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts":"3","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx":"4","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\Global.styles.ts":"5","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.styles.tsx":"7","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\Api.service.ts":"8","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\AxiosConfig.ts":"9","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\utility.ts":"10","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Search\\Search.tsx":"11"},{"size":208,"mtime":1634942315114,"results":"12","hashOfConfig":"13"},{"size":1469,"mtime":1635055412689,"results":"14","hashOfConfig":"13"},{"size":159,"mtime":1635051731439,"results":"15","hashOfConfig":"13"},{"size":5096,"mtime":1635053875683,"results":"16","hashOfConfig":"13"},{"size":929,"mtime":1635052130961,"results":"17","hashOfConfig":"13"},{"size":375,"mtime":1635034046954,"results":"18","hashOfConfig":"13"},{"size":1037,"mtime":1635051080913,"results":"19","hashOfConfig":"13"},{"size":1415,"mtime":1635047891028,"results":"20","hashOfConfig":"13"},{"size":186,"mtime":1635031174853,"results":"21","hashOfConfig":"13"},{"size":147,"mtime":1635049783658,"results":"22","hashOfConfig":"13"},{"size":1218,"mtime":1635057197182,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jihms8",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx",[],["52","53","54","55","56"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx",["57","58","59","60","61","62","63"],"import React, { useState, useEffect } from 'react';\nimport GlobalStyles from './Global.styles';\nimport { Header, Table, Search } from './components';\nimport Api from './services/Api.service';\n\ninterface Data {\n    results: any[];\n    filteredResults: any[];\n}\nconst App = () => {\n    const [pagination, setPagination] = useState({ totalPages: 0, currentPage: 0 });\n    const [data, setData] = useState<Data>({ results: [], filteredResults: [] });\n\n    useEffect(() => {\n        Api.getTotalCoins().then((res) => {\n            if (typeof res === 'string') {\n                console.log('error');\n                return null;\n            }\n            setPagination({ totalPages: Math.ceil(res.length / 100), currentPage: 1 });\n            return null;\n        });\n        Api.getMarketInfo(1).then((res) => {\n            if (typeof res === 'string') {\n                console.log('error');\n                return null;\n            }\n            setData({ results: res, filteredResults: res });\n            return null;\n        });\n    }, []);\n    const handleResults = (filtered: any[]) => {\n        setData((prev) => ({ ...prev, filteredResults: filtered }));\n    };\n    return (\n        <>\n            <GlobalStyles />\n            <Header />\n            <Search results={data.results} setResults={handleResults} />\n            <div>\n                <Table display={data.filteredResults} loading={false} />\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx",["64","65","66","67","68","69"],"import React, { useState, useEffect } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport { VictoryLine } from 'victory';\r\nimport { CircularProgress } from '@mui/material';\r\nimport MUITable from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Utlity from '../../utility';\r\nimport * as S from './Table.styles';\r\n\r\ninterface Props {\r\n    display: any[];\r\n    loading: boolean;\r\n}\r\nconst Table = ({ display, loading }: Props) => {\r\n    return (\r\n        <S.TableContainer>\r\n            <MUITable size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <S.TableCell>Symbol</S.TableCell>\r\n                        <S.TableCell align=\"right\">Name</S.TableCell>\r\n                        <S.TableCell align=\"right\">Current Price</S.TableCell>\r\n                        <S.TableCell align=\"right\">Change</S.TableCell>\r\n                        <S.TableCell align=\"right\">% Change</S.TableCell>\r\n                        <S.TableCell align=\"right\">Market Cap</S.TableCell>\r\n                        <S.TableCell align=\"right\">Total Volume</S.TableCell>\r\n                        <S.TableCell align=\"right\">Circulating Supply</S.TableCell>\r\n                        <S.TableCell align=\"right\">7 Day Chart</S.TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                {!loading && (\r\n                    <TableBody>\r\n                        {display.map((result) => {\r\n                            return (\r\n                                <TableRow\r\n                                    key={result?.id}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <S.TableCell>\r\n                                        <S.Flex>\r\n                                            <img\r\n                                                src={result?.image}\r\n                                                alt={`${result?.name} logo`}\r\n                                                height={16}\r\n                                                width={16}\r\n                                            />\r\n                                            {result.symbol}\r\n                                        </S.Flex>\r\n                                    </S.TableCell>\r\n                                    <S.TableCell align=\"right\">{result?.name}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">{result?.current_price}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">\r\n                                        {result?.price_change_24h}\r\n                                    </S.TableCell>\r\n                                    <S.TableCell align=\"right\">\r\n                                        {result?.price_change_percentage_24h}\r\n                                    </S.TableCell>\r\n                                    <S.TableCell align=\"right\">{result?.market_cap}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">{result?.total_volume}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">\r\n                                        {result?.circulating_supply}\r\n                                    </S.TableCell>\r\n                                    <S.TableCell align=\"right\" sx={{ maxWidth: 100 }}>\r\n                                        <VictoryLine\r\n                                            data={Utlity.formatSparkline(\r\n                                                result.sparkline_in_7d.price,\r\n                                            )}\r\n                                            style={{\r\n                                                data: {\r\n                                                    stroke:\r\n                                                        result.sparkline_in_7d.price[0] >=\r\n                                                        result.sparkline_in_7d.price[\r\n                                                            result.sparkline_in_7d.price.length - 1\r\n                                                        ]\r\n                                                            ? 'red'\r\n                                                            : 'green',\r\n                                                },\r\n                                            }}\r\n                                        />\r\n                                    </S.TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                )}\r\n            </MUITable>\r\n            {loading && (\r\n                <S.LoadingContainer>\r\n                    <CircularProgress />\r\n                </S.LoadingContainer>\r\n            )}\r\n        </S.TableContainer>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\Global.styles.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Header\\Header.tsx",["70"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from '../../assets/logo.svg';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            <img src={Logo} alt=\"Caleb and Brown company logo\" />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.styles.tsx",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\Api.service.ts",["71"],"import axios from './AxiosConfig';\r\n\r\ntype BasicCoinInfo = {\r\n    id: '01coin';\r\n    symbol: 'zoc';\r\n    name: '01coin';\r\n};\r\n\r\nexport default {\r\n    async getTotalCoins(): Promise<BasicCoinInfo[] | string> {\r\n        try {\r\n            const res = await axios.get('https://api.coingecko.com/api/v3/coins/list');\r\n            if (Array.isArray(res.data)) {\r\n                return res.data;\r\n            }\r\n            throw new Error('Unexpected result');\r\n        } catch (err: unknown) {\r\n            if (typeof err === 'string') return err;\r\n            if (err instanceof Error) return err.message;\r\n            return 'Unexpected error';\r\n        }\r\n    },\r\n    async getMarketInfo(page: number) {\r\n        try {\r\n            const res = await axios.get(\r\n                `https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&order=market_cap_desc&per_page=100&page=${page}&sparkline=false`,\r\n                {\r\n                    params: {\r\n                        sparkline: true,\r\n                    },\r\n                },\r\n            );\r\n            if (Array.isArray(res.data)) {\r\n                return res.data;\r\n            }\r\n            throw new Error('Unexpected result');\r\n        } catch (err: unknown) {\r\n            if (typeof err === 'string') return err;\r\n            if (err instanceof Error) return err.message;\r\n            return 'Unexpected error';\r\n        }\r\n    },\r\n};\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\AxiosConfig.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\utility.ts",["72"],"export default {\r\n    formatSparkline(sparkline: number[]) {\r\n        return sparkline.map((data, index) => ({ x: index, y: data }));\r\n    },\r\n};\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Search\\Search.tsx",["73","74","75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":14,"nodeType":"89","messageId":"90","endLine":7,"endColumn":17,"suggestions":"91"},{"ruleId":"87","severity":1,"message":"88","line":8,"column":22,"nodeType":"89","messageId":"90","endLine":8,"endColumn":25,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":10,"column":13,"nodeType":"95","messageId":"96","endLine":10,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":11,"column":12,"nodeType":"99","messageId":"100","endLine":11,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":17,"column":17,"nodeType":"103","messageId":"104","endLine":17,"endColumn":28},{"ruleId":"101","severity":1,"message":"102","line":25,"column":17,"nodeType":"103","messageId":"104","endLine":25,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":32,"column":38,"nodeType":"89","messageId":"90","endLine":32,"endColumn":41,"suggestions":"105"},{"ruleId":"97","severity":1,"message":"106","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"107","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"108","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"109","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":14,"column":14,"nodeType":"89","messageId":"90","endLine":14,"endColumn":17,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"94","line":17,"column":15,"nodeType":"95","messageId":"96","endLine":17,"endColumn":47},{"ruleId":"93","severity":1,"message":"94","line":10,"column":16,"nodeType":"95","messageId":"96","endLine":10,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":23,"column":5,"nodeType":"111","messageId":"96","endLine":23,"endColumn":38},{"ruleId":"93","severity":1,"message":"94","line":2,"column":5,"nodeType":"111","messageId":"96","endLine":2,"endColumn":41},{"ruleId":"97","severity":1,"message":"107","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":5,"column":14,"nodeType":"89","messageId":"90","endLine":5,"endColumn":17,"suggestions":"112"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":28,"nodeType":"89","messageId":"90","endLine":6,"endColumn":31,"suggestions":"113"},{"ruleId":"93","severity":1,"message":"94","line":16,"column":16,"nodeType":"95","messageId":"96","endLine":16,"endColumn":51},"lines-around-directive",["114"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["115","116"],["117","118"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'pagination' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected",["119","120"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'DateTime' is defined but never used.","'Paper' is defined but never used.",["121","122"],"FunctionExpression",["123","124"],["125","126"],"padding-line-between-statements",{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"127","fix":"137","desc":"129"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"127","fix":"139","desc":"129"},{"messageId":"130","fix":"140","desc":"132"},{"messageId":"127","fix":"141","desc":"129"},{"messageId":"130","fix":"142","desc":"132"},"suggestUnknown",{"range":"143","text":"144"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"143","text":"145"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"146","text":"144"},{"range":"146","text":"145"},{"range":"147","text":"144"},{"range":"147","text":"145"},{"range":"148","text":"144"},{"range":"148","text":"145"},{"range":"149","text":"144"},{"range":"149","text":"145"},{"range":"150","text":"144"},{"range":"150","text":"145"},[223,226],"unknown","never",[251,254],[1079,1082],[523,526],[128,131],[163,166]]