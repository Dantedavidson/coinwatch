[{"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts":"3","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx":"4","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\Global.styles.ts":"5","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.styles.tsx":"7","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\Api.service.ts":"8","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\AxiosConfig.ts":"9","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\utility.ts":"10","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Search\\Search.tsx":"11","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\PaginationBar\\PaginationBar.tsx":"12","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\ErrorTab\\ErrorTab.tsx":"13"},{"size":208,"mtime":1634942315114,"results":"14","hashOfConfig":"15"},{"size":2727,"mtime":1635135133580,"results":"16","hashOfConfig":"15"},{"size":294,"mtime":1635132048354,"results":"17","hashOfConfig":"15"},{"size":5389,"mtime":1635131918426,"results":"18","hashOfConfig":"15"},{"size":1053,"mtime":1635059536664,"results":"19","hashOfConfig":"15"},{"size":387,"mtime":1635117762402,"results":"20","hashOfConfig":"15"},{"size":993,"mtime":1635118464850,"results":"21","hashOfConfig":"15"},{"size":1446,"mtime":1635135169898,"results":"22","hashOfConfig":"15"},{"size":186,"mtime":1635131954041,"results":"23","hashOfConfig":"15"},{"size":147,"mtime":1635049783658,"results":"24","hashOfConfig":"15"},{"size":1218,"mtime":1635057197182,"results":"25","hashOfConfig":"15"},{"size":1426,"mtime":1635116428148,"results":"26","hashOfConfig":"15"},{"size":978,"mtime":1635135106429,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jihms8",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx",[],["61","62","63","64","65"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx",["66","67","68","69"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx",["70","71","72"],"import React from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport { VictoryLine } from 'victory';\r\nimport { CircularProgress } from '@mui/material';\r\nimport MUITable from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Utlity from '../../utility';\r\nimport * as S from './Table.styles';\r\n\r\ninterface Props {\r\n    display: any[];\r\n    loading: boolean;\r\n}\r\nconst Table = ({ display, loading }: Props) => {\r\n    return (\r\n        <S.TableContainer>\r\n            <MUITable size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <S.TableCell>Symbol</S.TableCell>\r\n                        <S.TableCell align=\"right\">Name</S.TableCell>\r\n                        <S.TableCell align=\"right\">Current Price</S.TableCell>\r\n                        <S.TableCell align=\"right\">Change</S.TableCell>\r\n                        <S.TableCell align=\"right\">% Change</S.TableCell>\r\n                        <S.TableCell align=\"right\">Market Cap</S.TableCell>\r\n                        <S.TableCell align=\"right\">Total Volume</S.TableCell>\r\n                        <S.TableCell align=\"right\">Circulating Supply</S.TableCell>\r\n                        <S.TableCell align=\"right\">7 Day Chart</S.TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                {!loading && (\r\n                    <TableBody>\r\n                        {display.map((result) => {\r\n                            const {\r\n                                id,\r\n                                image,\r\n                                name,\r\n                                symbol,\r\n                                current_price: currentPrice,\r\n                                price_change_24h: priceChange24h,\r\n                                price_change_percentage_24h: priceChangePercentage24h,\r\n                                market_cap: marketCap,\r\n                                total_volume: totalVolume,\r\n                                circulating_supply: circulatingSupply,\r\n                                sparkline_in_7d: { price },\r\n                            } = result;\r\n                            return (\r\n                                <TableRow\r\n                                    key={id}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <S.TableCell>\r\n                                        <S.Flex>\r\n                                            {image && (\r\n                                                <img\r\n                                                    src={image}\r\n                                                    alt={`${name} logo`}\r\n                                                    height={16}\r\n                                                    width={16}\r\n                                                />\r\n                                            )}\r\n                                            {symbol}\r\n                                        </S.Flex>\r\n                                    </S.TableCell>\r\n                                    <S.TableCell align=\"right\">{name}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">{currentPrice}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">{priceChange24h}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">\r\n                                        {priceChangePercentage24h}\r\n                                    </S.TableCell>\r\n                                    <S.TableCell align=\"right\">{marketCap}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">{totalVolume}</S.TableCell>\r\n                                    <S.TableCell align=\"right\">{circulatingSupply}</S.TableCell>\r\n                                    <S.TableCell align=\"right\" sx={{ maxWidth: 100 }}>\r\n                                        {price.length > 0 && (\r\n                                            <VictoryLine\r\n                                                data={Utlity.formatSparkline(price)}\r\n                                                style={{\r\n                                                    data: {\r\n                                                        stroke:\r\n                                                            price[0] >= price[price.length - 1]\r\n                                                                ? 'red'\r\n                                                                : 'green',\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    </S.TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                )}\r\n            </MUITable>\r\n            {loading && (\r\n                <S.LoadingContainer>\r\n                    <CircularProgress />\r\n                </S.LoadingContainer>\r\n            )}\r\n        </S.TableContainer>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\Global.styles.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Header\\Header.tsx",["73"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from '../../assets/logo.svg';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            <img src={Logo} alt=\"Caleb and Brown company logo\" width={200} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.styles.tsx",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\Api.service.ts",["74"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\AxiosConfig.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\utility.ts",["75"],"export default {\r\n    formatSparkline(sparkline: number[]) {\r\n        return sparkline.map((data, index) => ({ x: index, y: data }));\r\n    },\r\n};\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Search\\Search.tsx",["76","77","78","79"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    results: any[];\r\n    setResults: (filtered: any[]) => void;\r\n}\r\n\r\nconst Input = styled.input`\r\n    padding: 2px;\r\n    border: 0 transparent;\r\n    border-radius: 2px;\r\n    outline: none;\r\n`;\r\n\r\nconst Search = ({ results, setResults }: Props) => {\r\n    const [input, setInput] = useState('');\r\n    const filterResults = (value: string) => {\r\n        const filtered = [];\r\n        for (let i = 0; i < results.length; i += 1) {\r\n            if (\r\n                results[i].name.toLowerCase().includes(value.toLowerCase()) ||\r\n                results[i]?.symbol.toLowerCase().includes(value.toLowerCase())\r\n            ) {\r\n                filtered.push(results[i]);\r\n            }\r\n        }\r\n        return filtered;\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInput(e.target.value);\r\n        setResults(filterResults(e.target.value));\r\n    };\r\n    return (\r\n        <Input\r\n            placeholder=\"Filter by name or symbol\"\r\n            value={input}\r\n            onChange={(e) => handleChange(e)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\PaginationBar\\PaginationBar.tsx",["80"],"import React from 'react';\r\nimport MUIPagination from '@mui/material/Pagination';\r\nimport styled from 'styled-components';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst Pagination = styled(MUIPagination)`\r\n    /* && {\r\n        .MuiPaginationItem-root\r\n            .MuiPaginationItem-sizeMedium\r\n            .MuiPaginationItem-text\r\n            .MuiPaginationItem-rounded\r\n            .MuiPaginationItem-textPrimary\r\n            .MuiPaginationItem-ellipsis\r\n            .css-1v2lvtn-MuiPaginationItem-root {\r\n            color: #fff;\r\n        }\r\n    } */\r\n`;\r\n\r\ninterface Props {\r\n    count: number;\r\n    current: number;\r\n    setPagination: React.Dispatch<\r\n        React.SetStateAction<{\r\n            totalPages: number;\r\n            currentPage: number;\r\n        }>\r\n    >;\r\n}\r\n\r\nconst PaginationBar = ({ count, current, setPagination }: Props) => {\r\n    const handleChange = (value: number) => {\r\n        setPagination((prev) => ({ ...prev, currentPage: value }));\r\n    };\r\n    return (\r\n        <Stack spacing={2}>\r\n            <Pagination\r\n                color=\"primary\"\r\n                sx={{ color: 'white' }}\r\n                count={count}\r\n                showFirstButton\r\n                showLastButton\r\n                shape=\"rounded\"\r\n                page={current}\r\n                onChange={(e, value) => handleChange(value)}\r\n            />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default PaginationBar;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\ErrorTab\\ErrorTab.tsx",["81"],"import React from 'react';\r\nimport { Typography, Button } from '@mui/material';\r\nimport styled from 'styled-components';\r\nimport { Data } from '../../App';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    height: 90vh;\r\n`;\r\ninterface Props {\r\n    onClickHandler: React.Dispatch<React.SetStateAction<Data>>;\r\n}\r\nconst ErrorTab = ({ onClickHandler }: Props) => {\r\n    return (\r\n        <Container>\r\n            <Typography align=\"center\" variant=\"h3\" sx={{ color: '#fff' }}>\r\n                Something went wrong when fetching your results.\r\n            </Typography>{' '}\r\n            <Button\r\n                variant=\"outlined\"\r\n                sx={{ color: '#fff', borderColor: '#fff' }}\r\n                onClick={() => onClickHandler((prev) => ({ ...prev, error: false }))}\r\n            >\r\n                Try Again\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ErrorTab;\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":14,"nodeType":"94","messageId":"95","endLine":15,"endColumn":17,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"93","line":16,"column":22,"nodeType":"94","messageId":"95","endLine":16,"endColumn":25,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":25,"column":13,"nodeType":"100","messageId":"101","endLine":25,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":56,"column":38,"nodeType":"94","messageId":"95","endLine":56,"endColumn":41,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":13,"column":14,"nodeType":"94","messageId":"95","endLine":13,"endColumn":17,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":15,"nodeType":"100","messageId":"101","endLine":16,"endColumn":47},{"ruleId":"98","severity":1,"message":"99","line":10,"column":16,"nodeType":"100","messageId":"101","endLine":10,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":25,"column":5,"nodeType":"108","messageId":"101","endLine":25,"endColumn":57},{"ruleId":"98","severity":1,"message":"99","line":2,"column":5,"nodeType":"108","messageId":"101","endLine":2,"endColumn":41},{"ruleId":"103","severity":1,"message":"109","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":5,"column":14,"nodeType":"94","messageId":"95","endLine":5,"endColumn":17,"suggestions":"110"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":28,"nodeType":"94","messageId":"95","endLine":6,"endColumn":31,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":16,"nodeType":"100","messageId":"101","endLine":16,"endColumn":51},{"ruleId":"98","severity":1,"message":"99","line":31,"column":23,"nodeType":"100","messageId":"101","endLine":31,"endColumn":68},{"ruleId":"98","severity":1,"message":"99","line":15,"column":18,"nodeType":"100","messageId":"101","endLine":15,"endColumn":48},"lines-around-directive",["112"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["113","114"],["115","116"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["117","118"],"@typescript-eslint/no-unused-vars","'DateTime' is defined but never used.","Identifier","unusedVar",["119","120"],"FunctionExpression","'useEffect' is defined but never used.",["121","122"],["123","124"],"padding-line-between-statements",{"messageId":"125","fix":"126","desc":"127"},{"messageId":"128","fix":"129","desc":"130"},{"messageId":"125","fix":"131","desc":"127"},{"messageId":"128","fix":"132","desc":"130"},{"messageId":"125","fix":"133","desc":"127"},{"messageId":"128","fix":"134","desc":"130"},{"messageId":"125","fix":"135","desc":"127"},{"messageId":"128","fix":"136","desc":"130"},{"messageId":"125","fix":"137","desc":"127"},{"messageId":"128","fix":"138","desc":"130"},{"messageId":"125","fix":"139","desc":"127"},{"messageId":"128","fix":"140","desc":"130"},"suggestUnknown",{"range":"141","text":"142"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"141","text":"143"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"144","text":"142"},{"range":"144","text":"143"},{"range":"145","text":"142"},{"range":"145","text":"143"},{"range":"146","text":"142"},{"range":"146","text":"143"},{"range":"147","text":"142"},{"range":"147","text":"143"},{"range":"148","text":"142"},{"range":"148","text":"143"},[449,452],"unknown","never",[477,480],[1786,1789],[456,459],[128,131],[163,166]]