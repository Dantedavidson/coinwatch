[{"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts":"3","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx":"4","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\Global.styles.ts":"5","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Header\\Header.tsx":"6","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.styles.tsx":"7","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\Api.service.ts":"8","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\AxiosConfig.ts":"9","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\utility.ts":"10","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Search\\Search.tsx":"11","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\PaginationBar\\PaginationBar.tsx":"12","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\ErrorTab\\ErrorTab.tsx":"13","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Tabs\\Tabs.tsx":"14","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Tabs\\Tabs.styles.ts":"15"},{"size":208,"mtime":1634942315114,"results":"16","hashOfConfig":"17"},{"size":3341,"mtime":1635222603585,"results":"18","hashOfConfig":"17"},{"size":342,"mtime":1635137686528,"results":"19","hashOfConfig":"17"},{"size":5824,"mtime":1635294455375,"results":"20","hashOfConfig":"17"},{"size":1070,"mtime":1635293972847,"results":"21","hashOfConfig":"17"},{"size":387,"mtime":1635117762402,"results":"22","hashOfConfig":"17"},{"size":1023,"mtime":1635221888180,"results":"23","hashOfConfig":"17"},{"size":1445,"mtime":1635136738809,"results":"24","hashOfConfig":"17"},{"size":186,"mtime":1635131954041,"results":"25","hashOfConfig":"17"},{"size":147,"mtime":1635141249770,"results":"26","hashOfConfig":"17"},{"size":1235,"mtime":1635294017219,"results":"27","hashOfConfig":"17"},{"size":984,"mtime":1635294022946,"results":"28","hashOfConfig":"17"},{"size":875,"mtime":1635137653484,"results":"29","hashOfConfig":"17"},{"size":1205,"mtime":1635222818181,"results":"30","hashOfConfig":"17"},{"size":414,"mtime":1635222892734,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1jihms8",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\index.tsx",[],["69","70","71","72","73"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\App.tsx",["74","75"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyles from './Global.styles';\nimport { DataState } from './types';\nimport { Header, Table, Search, PaginationBar, Tabs, ErrorTab } from './components';\nimport Api from './services/Api.service';\n\nconst Container = styled.div`\n    width: 90%;\n    margin: auto;\n`;\n\nconst initial: DataState = {\n    type: 'market_cap_desc',\n    loading: true,\n    error: false,\n    results: [],\n    filteredResults: [],\n};\nconst App = () => {\n    const [pagination, setPagination] = useState({ totalPages: 0, currentPage: 0 });\n    const [data, setData] = useState<DataState>(initial);\n\n    useEffect(() => {\n        Api.getTotalCoins().then((res) => {\n            if (typeof res === 'string') {\n                setData((prev) => ({ ...prev, loading: false, error: true }));\n            }\n            setPagination({ totalPages: Math.floor(res.length / 100), currentPage: 1 });\n            return null;\n        });\n    }, []);\n    useEffect(() => {\n        setData((prev) => ({ ...prev, loading: true }));\n        Api.getMarketInfo(pagination.currentPage, data.type).then((res) => {\n            if (typeof res === 'string') {\n                return setData((prev) => ({ ...prev, loading: false, error: true }));\n            }\n            setData((prev) => ({\n                ...prev,\n                loading: false,\n                error: false,\n                results: res,\n                filteredResults: res,\n            }));\n            return null;\n        });\n    }, [pagination.currentPage, data.type]);\n\n    const refreshData = async () => {\n        try {\n            const total = await Api.getTotalCoins();\n            const result = await Api.getMarketInfo(1, data.type);\n            if (typeof result === 'string' || typeof total === 'string') throw new Error();\n            setPagination({ totalPages: Math.floor(total.length / 100), currentPage: 1 });\n            setData((prev) => ({\n                ...prev,\n                loading: false,\n                error: false,\n                results: result,\n                filteredResults: result,\n            }));\n        } catch (err) {\n            setData((prev) => ({ ...prev, loading: false, error: true }));\n        }\n    };\n    const handleResults = (filtered: any[]) => {\n        setData((prev) => ({ ...prev, filteredResults: filtered }));\n    };\n    return (\n        <>\n            <GlobalStyles />\n            <Header />\n            <Container>\n                {data.error ? (\n                    <ErrorTab onClickHandler={refreshData} />\n                ) : (\n                    <>\n                        <Search results={data.results} setResults={handleResults} />\n                        <Tabs onClickHandler={setData} current={data.type} />\n                        <Table display={data.filteredResults} loading={data.loading} />\n                        {!data.loading && (\n                            <PaginationBar\n                                count={pagination.totalPages}\n                                current={pagination.currentPage}\n                                setPagination={setPagination}\n                            />\n                        )}\n                    </>\n                )}\n            </Container>\n        </>\n    );\n};\n\nexport default App;\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\index.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.tsx",["76","77"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\Global.styles.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Header\\Header.tsx",["78"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from '../../assets/logo.svg';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            <img src={Logo} alt=\"Caleb and Brown company logo\" width={200} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Table\\Table.styles.tsx",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\Api.service.ts",["79"],"import axios from './AxiosConfig';\r\n\r\ntype BasicCoinInfo = {\r\n    id: '01coin';\r\n    symbol: 'zoc';\r\n    name: '01coin';\r\n};\r\n\r\ntype SortQuery = 'market_cap_desc' | 'volume_desc';\r\n\r\nexport default {\r\n    async getTotalCoins(): Promise<BasicCoinInfo[] | string> {\r\n        try {\r\n            const res = await axios.get('coins/list');\r\n            if (Array.isArray(res.data)) {\r\n                return res.data;\r\n            }\r\n            throw new Error('Unexpected result');\r\n        } catch (err) {\r\n            if (typeof err === 'string') return err;\r\n            if (err instanceof Error) return err.message;\r\n            return 'Unexpected error';\r\n        }\r\n    },\r\n    async getMarketInfo(page: number, sortBy: SortQuery) {\r\n        try {\r\n            const res = await axios.get(\r\n                `coins/markets?vs_currency=aud&order=market_cap_desc&per_page=100&page=${page}&sparkline=false`,\r\n                {\r\n                    params: {\r\n                        order: sortBy,\r\n                        sparkline: true,\r\n                    },\r\n                },\r\n            );\r\n            if (Array.isArray(res.data)) {\r\n                return res.data;\r\n            }\r\n            throw new Error('Unexpected result');\r\n        } catch (err) {\r\n            if (typeof err === 'string') return err;\r\n            if (err instanceof Error) return err.message;\r\n            return 'Unexpected error';\r\n        }\r\n    },\r\n};\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\services\\AxiosConfig.ts",[],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\utility.ts",["80"],"export default {\r\n    formatSparkline(sparkline: number[]) {\r\n        return sparkline.map((data, index) => ({ x: index, y: data }));\r\n    },\r\n};\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Search\\Search.tsx",["81","82","83"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\PaginationBar\\PaginationBar.tsx",["84"],"C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\ErrorTab\\ErrorTab.tsx",["85"],"import React from 'react';\r\nimport { Typography, Button } from '@mui/material';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    height: 90vh;\r\n`;\r\ninterface Props {\r\n    onClickHandler: () => Promise<void>;\r\n}\r\nconst ErrorTab = ({ onClickHandler }: Props) => {\r\n    return (\r\n        <Container>\r\n            <Typography align=\"center\" variant=\"h3\" sx={{ color: '#fff' }}>\r\n                Something went wrong when fetching your results.\r\n            </Typography>{' '}\r\n            <Button\r\n                variant=\"outlined\"\r\n                sx={{ color: '#fff', borderColor: '#fff' }}\r\n                onClick={onClickHandler}\r\n            >\r\n                Try Again\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ErrorTab;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Tabs\\Tabs.tsx",["86"],"import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport * as S from './Tabs.styles';\r\nimport { DataState } from '../../types';\r\n\r\ninterface Props {\r\n    onClickHandler: React.Dispatch<React.SetStateAction<DataState>>;\r\n    current: 'market_cap_desc' | 'volume_desc';\r\n}\r\nconst Tabs = ({ onClickHandler, current }: Props) => {\r\n    const checkStatus = (value: string) => {\r\n        return value === current;\r\n    };\r\n    return (\r\n        <S.Container>\r\n            <S.Tab\r\n                onClick={() => onClickHandler((prev) => ({ ...prev, type: 'market_cap_desc' }))}\r\n                active={checkStatus('market_cap_desc')}\r\n            >\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    Market Cap\r\n                </Typography>\r\n            </S.Tab>\r\n            <S.Tab\r\n                onClick={() => onClickHandler((prev) => ({ ...prev, type: 'volume_desc' }))}\r\n                active={checkStatus('volume_desc')}\r\n            >\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    Trading Volume\r\n                </Typography>\r\n            </S.Tab>\r\n        </S.Container>\r\n    );\r\n};\r\n\r\nexport default Tabs;\r\n","C:\\Users\\User\\Desktop\\Dante\\JobApplications\\CalebBrown\\coinwatch\\src\\components\\Tabs\\Tabs.styles.ts",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":20,"column":13,"nodeType":"99","messageId":"100","endLine":20,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":67,"column":38,"nodeType":"103","messageId":"104","endLine":67,"endColumn":41,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":12,"column":14,"nodeType":"103","messageId":"104","endLine":12,"endColumn":17,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"98","line":15,"column":15,"nodeType":"99","messageId":"100","endLine":15,"endColumn":47},{"ruleId":"97","severity":1,"message":"98","line":10,"column":16,"nodeType":"99","messageId":"100","endLine":10,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":25,"column":5,"nodeType":"107","messageId":"100","endLine":25,"endColumn":57},{"ruleId":"97","severity":1,"message":"98","line":2,"column":5,"nodeType":"107","messageId":"100","endLine":2,"endColumn":41},{"ruleId":"101","severity":1,"message":"102","line":5,"column":14,"nodeType":"103","messageId":"104","endLine":5,"endColumn":17,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"102","line":6,"column":28,"nodeType":"103","messageId":"104","endLine":6,"endColumn":31,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"98","line":17,"column":16,"nodeType":"99","messageId":"100","endLine":17,"endColumn":51},{"ruleId":"97","severity":1,"message":"98","line":16,"column":23,"nodeType":"99","messageId":"100","endLine":16,"endColumn":68},{"ruleId":"97","severity":1,"message":"98","line":14,"column":18,"nodeType":"99","messageId":"100","endLine":14,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":10,"column":14,"nodeType":"99","messageId":"100","endLine":10,"endColumn":53},"lines-around-directive",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["111","112"],["113","114"],"FunctionExpression",["115","116"],["117","118"],"padding-line-between-statements",{"messageId":"119","fix":"120","desc":"121"},{"messageId":"122","fix":"123","desc":"124"},{"messageId":"119","fix":"125","desc":"121"},{"messageId":"122","fix":"126","desc":"124"},{"messageId":"119","fix":"127","desc":"121"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"119","fix":"129","desc":"121"},{"messageId":"122","fix":"130","desc":"124"},"suggestUnknown",{"range":"131","text":"132"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"131","text":"133"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"134","text":"132"},{"range":"134","text":"133"},{"range":"135","text":"132"},{"range":"135","text":"133"},{"range":"136","text":"132"},{"range":"136","text":"133"},[2318,2321],"unknown","never",[421,424],[117,120],[152,155]]